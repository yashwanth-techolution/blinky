/ {
    leds {
		compatible = "gpio-leds";
		hz_stpr_en: led_0 {
			gpios = <&gpio1 13 GPIO_ACTIVE_LOW>;
			label = "Green LED 0";
		};
		stpr_dir:   led_1 {
			gpios = <&gpio1 14 GPIO_ACTIVE_LOW>;
			label = "Green LED 1";
		};
		vr_stpr_en: led_2 {
			gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
			label = "Green LED 2";
		};
		uart_gpio:  led_3 {
			gpios = <&gpio0 15 GPIO_ACTIVE_HIGH>;
			label = "Green LED 3";
		};
		m_motor_en: led_4 {
			gpios = <&gpio0 29 GPIO_ACTIVE_HIGH>;
			label = "Green LED 4";
		};
		motor_driver_relay: led_5 {
			gpios = <&gpio0 16 GPIO_ACTIVE_LOW>;
			label = "Green LED 5";
		};
		display_on: led_6 {
			gpios = <&gpio0 28 GPIO_ACTIVE_LOW>;
			label = "Green LED 6";
		};
		gearmotor_dir: led_7 {
			gpios = <&gpio0 25 GPIO_ACTIVE_LOW>;
			label = "Green LED 7";
		};
		// uwb_gpio: led_8 {
		// 	gpios = <&gpio1 9 GPIO_ACTIVE_LOW>;
		// 	label = "Green LED 8";
		// };
    };

	pwmleds {
		compatible = "pwm-leds";
		stpr_pulse: pwm_led_0 {
			pwms = <&pwm0 36 PWM_MSEC(20) PWM_POLARITY_INVERTED>;
		};
		m_motor_pwm: pwm_led_1 {
			pwms = <&pwm1 24 PWM_MSEC(20) PWM_POLARITY_INVERTED>;
		};
		m_motor_pwm_b: pwm_led_2 {
			pwms = <&pwm2 25 PWM_MSEC(20) PWM_POLARITY_INVERTED>;
		};
		syntiant_clock: pwm_led_3 {
			pwms = <&pwm3 30 PWM_MSEC(20) PWM_POLARITY_INVERTED>;
		};
	};

	buttons {
		compatible = "gpio-keys";
		button0: button_0 {
			gpios = <&gpio0 11 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			label = "Push button switch 0";
		};
		button1: button_1 {
			gpios = <&gpio0 12 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			label = "Push button switch 1";
		};
		button2: button_2 {
			gpios = <&gpio0 24 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			label = "Push button switch 2";
		};
		button3: button_3 {
			gpios = <&gpio0 25 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			label = "Push button switch 3";
		};
		pir_sensor_1: button_4 {
			gpios = <&gpio1 10 (GPIO_PULL_DOWN)>;
			label = "Push button switch 4";
		};
		synt_interpt: button_5 {
			gpios = <&gpio1 15 (GPIO_PULL_DOWN)>;
			label = "Push button switch 5";
		};
		stm_interpt: button_6 {
			gpios = <&gpio0 9 (GPIO_PULL_DOWN)>;
			label = "Push button switch 6";
		};
	};
	arduino_adc: analog-connector {
		compatible = "arduino,uno-adc";
		#io-channel-cells = <1>;
		io-channel-map = <0 &adc 1>,	/* A0 = P0.3 = AIN1 */
				 <1 &adc 2>,	/* A1 = P0.4 = AIN2 */
				 <2 &adc 4>,	/* A2 = P0.28 = AIN4 */
				 <3 &adc 5>,	/* A3 = P0.29 = AIN5 */
				 <4 &adc 6>,	/* A4 = P0.30 = AIN6 */
				 <5 &adc 7>;	/* A5 = P0.31 = AIN7 */
	};
	/* These aliases are provided for compatibility with samples */
	aliases {
		spi-0 = &spi0;
		spi-2 = &spi2;
		spi-3 = &spi3;
		i2c-0 = &i2c0;
		i2c-1 = &i2c1;
		adcctrl = &adc;
		hz-stpr-en = &hz_stpr_en;
		vr-stpr-en = &vr_stpr_en;
		stpr-dir = &stpr_dir;
		gearmotor-dir = &gearmotor_dir;
		uart-gpio = &uart_gpio;
		//uwb-gpio = &uwb_gpio;
		m-motor-en = &m_motor_en;
		motor-driver-relay = &motor_driver_relay;
		stpr-pulse = &stpr_pulse;
		m-motor-pwm = &m_motor_pwm;
		m-motor-pwm-b = &m_motor_pwm_b;
		syntiant-clock = &syntiant_clock;
		display-on = &display_on;
		sw0 = &button0;
		sw1 = &button1;
		sw2 = &button2;
		sw3 = &button3;
		pir-sensor-1 = &pir_sensor_1;
		synt-interpt = &synt_interpt;
		stm-interpt = &stm_interpt;
	};
};

&adc {
	status = "okay";
};

&gpiote {
	status = "okay";
};

&gpio0 {
	status = "okay";
};

&gpio1 {
	status = "okay";
};

&uart0 {
	compatible = "nordic,nrf-uarte";
	status = "okay";
	current-speed = <115200>;
	pinctrl-0 = <&uart0_default>;
	pinctrl-1 = <&uart0_sleep>;
	pinctrl-names = "default", "sleep";
};

arduino_serial: &uart1 {
	current-speed = <115200>;
	pinctrl-0 = <&uart1_default>;
	pinctrl-1 = <&uart1_sleep>;
	pinctrl-names = "default", "sleep";
};

arduino_i2c: &i2c0 {
	compatible = "nordic,nrf-twi";
	status = "okay";
	pinctrl-0 = <&i2c0_default>;
	pinctrl-1 = <&i2c0_sleep>;
	pinctrl-names = "default", "sleep";
};

&i2c1 {
	compatible = "nordic,nrf-twi";
	/* Cannot be used together with spi1. */
	/* status = "okay"; */
	pinctrl-0 = <&i2c1_default>;
	pinctrl-1 = <&i2c1_sleep>;
	pinctrl-names = "default", "sleep";
};

// &pwm0 {
// 	status = "okay";
// 	pinctrl-0 = <&pwm0_default>;
// 	pinctrl-1 = <&pwm0_sleep>;
// 	pinctrl-names = "default", "sleep";
// };

// &pwm1 {
// 	status = "okay";
// 	pinctrl-0 = <&pwm1_default>;
// 	pinctrl-1 = <&pwm1_sleep>;
// 	pinctrl-names = "default", "sleep";
// };

// &pwm2 {
// 	status = "okay";
// 	pinctrl-0 = <&pwm2_default>;
// 	pinctrl-1 = <&pwm2_sleep>;
// 	pinctrl-names = "default", "sleep";
// };

// &pwm3 {
// 	status = "okay";
// 	pinctrl-0 = <&pwm3_default>;
// 	pinctrl-1 = <&pwm3_sleep>;
// 	pinctrl-names = "default", "sleep";
// };


&spi0 {
	compatible = "nordic,nrf-spi";
	/* Cannot be used together with i2c0. */
	/* status = "okay"; */
	pinctrl-0 = <&spi0_default>;
	pinctrl-1 = <&spi0_sleep>;
	pinctrl-names = "default", "sleep";
};

&spi1 {
	compatible = "nordic,nrf-spi";
	/*status = "okay";*/
	pinctrl-0 = <&spi1_default>;
	pinctrl-1 = <&spi1_sleep>;
	pinctrl-names = "default", "sleep";
};

&spi2 {
	compatible = "nordic,nrf-spi";
	status = "okay";
	pinctrl-0 = <&spi2_default>;
	pinctrl-1 = <&spi2_sleep>;
	pinctrl-names = "default", "sleep";
};

// &qspi {
// 	status = "okay";
// 	pinctrl-0 = <&qspi_default>;
// 	pinctrl-1 = <&qspi_sleep>;
// 	pinctrl-names = "default", "sleep";
// 	mx25r64: mx25r6435f@0 {
// 		compatible = "nordic,qspi-nor";
// 		reg = <0>;
// 		/* MX25R64 supports only pp and pp4io */
// 		writeoc = "pp4io";
// 		/* MX25R64 supports all readoc options */
// 		readoc = "read4io";
// 		sck-frequency = <8000000>;
// 		jedec-id = [c2 28 17];
// 		sfdp-bfp = [
// 			e5 20 f1 ff  ff ff ff 03  44 eb 08 6b  08 3b 04 bb
// 			ee ff ff ff  ff ff 00 ff  ff ff 00 ff  0c 20 0f 52
// 			10 d8 00 ff  23 72 f5 00  82 ed 04 cc  44 83 68 44
// 			30 b0 30 b0  f7 c4 d5 5c  00 be 29 ff  f0 d0 ff ff
// 		];
// 		size = <67108864>;
// 		has-dpd;
// 		t-enter-dpd = <10000>;
// 		t-exit-dpd = <35000>;
// 	};
// };

arduino_spi: &spi3 {
	status = "okay";
	//cs-gpios = <&arduino_header 16 GPIO_ACTIVE_LOW>; /* D10 */
	pinctrl-0 = <&spi3_default>;
	pinctrl-1 = <&spi3_sleep>;
	pinctrl-names = "default", "sleep";
};

// &flash0 {

// 	partitions {
// 		compatible = "fixed-partitions";
// 		#address-cells = <1>;
// 		#size-cells = <1>;

// 		boot_partition: partition@0 {
// 			label = "mcuboot";
// 			reg = <0x00000000 0x0000C000>;
// 		};
// 		slot0_partition: partition@c000 {
// 			label = "image-0";
// 			reg = <0x0000C000 0x00076000>;
// 		};
// 		slot1_partition: partition@82000 {
// 			label = "image-1";
// 			reg = <0x00082000 0x00076000>;
// 		};

// 		/*
// 		 * The flash starting at 0x000f8000 and ending at
// 		 * 0x000fffff is reserved for use by the application.
// 		 */

// 		/*
// 		 * Storage partition will be used by FCB/LittleFS/NVS
// 		 * if enabled.
// 		 */
// 		storage_partition: partition@f8000 {
// 			label = "storage";
// 			reg = <0x000f8000 0x00008000>;
// 		};
// 	};
// };

&flash0 {

	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		boot_partition: partition@0 {
			label = "mcuboot";
			reg = <0x00000000 0x0000C000>;
		};
		slot0_partition: partition@c000 {
			label = "image-0";
			reg = <0x0000C000 0x00067000>;
		};
		slot1_partition: partition@73000 {
			label = "image-1";
			reg = <0x00073000 0x00067000>;
		};
		scratch_partition: partition@da000 {
			label = "image-scratch";
			reg = <0x000da000 0x0001e000>;
		};

		/*
		 * The flash starting at 0x000f8000 and ending at
		 * 0x000fffff is reserved for use by the application.
		 */

		/*
		 * Storage partition will be used by FCB/LittleFS/NVS
		 * if enabled.
		 */
		storage_partition: partition@f8000 {
			label = "storage";
			reg = <0x000f8000 0x00008000>;
		};
	};
};

zephyr_udc0: &usbd {
	compatible = "nordic,nrf-usbd";
	status = "okay";
};
